/*
** This file is part of libyuni, a cross-platform C++ framework (http://libyuni.org).
**
** This Source Code Form is subject to the terms of the Mozilla Public License
** v.2.0. If a copy of the MPL was not distributed with this file, You can
** obtain one at http://mozilla.org/MPL/2.0/.
**
** github: https://github.com/libyuni/libyuni/
** gitlab: https://gitlab.com/libyuni/libyuni/ (mirror)
*/
#ifndef __CPP_PARSER_SYMBOLS_HXX__
# define __CPP_PARSER_SYMBOLS_HXX__


// Generated by grammar-converter

# include <yuni/yuni.h>
# include "symbols.h"


namespace Grammar
{
namespace Private
{
namespace JSON
{
namespace Symbols
{

	enum { count = 21 };


	enum Kind
	{
		kdTerminal,
		kdEnd,
		kdNonTerminal,
		kdWhitespace,
		kdCommentStart,
		kdCommentEnd,
		kdCommentLine,
		kdError
	};

	/*!
	** \brief All IDs for symbols
	*/
	typedef ::Grammar::JSON::Symbol  ID;

	struct Entry
	{
		//! Kind
		const Kind kind;
		//! All ascii characters for the current table
		const char* const name;
		//! Symbol ID
		ID id;
		//! Flag to determine whether the symbol is 'Continued' or not
		bool continued;
	};



	/*!
	** \brief The symbols table
	*/
	static const Entry table[count] =
	{
		{ kdEnd,          "EOF", Grammar::JSON::symNTEOF, false },
		{ kdError,        "Error", Grammar::JSON::symNTError, false },
		{ kdWhitespace,   "Whitespace", Grammar::JSON::symNTWhitespace, false },
		{ kdTerminal,     ",", Grammar::JSON::symComma, false },
		{ kdTerminal,     ":", Grammar::JSON::symColon, false },
		{ kdTerminal,     "[", Grammar::JSON::symBracketLeft, false },
		{ kdTerminal,     "]", Grammar::JSON::symBracketRight, false },
		{ kdTerminal,     "{", Grammar::JSON::symCurlyBracketLeft, false },
		{ kdTerminal,     "}", Grammar::JSON::symCurlyBracketRight, false },
		{ kdTerminal,     "false", Grammar::JSON::symTFalse, false },
		{ kdTerminal,     "null", Grammar::JSON::symTNull, false },
		{ kdTerminal,     "Number", Grammar::JSON::symTNumber, false },
		{ kdTerminal,     "String", Grammar::JSON::symTString, false },
		{ kdTerminal,     "true", Grammar::JSON::symTTrue, false },
		{ kdNonTerminal,  "Array", Grammar::JSON::symNTArray, false },
		{ kdNonTerminal,  "Elements", Grammar::JSON::symNTElements, false },
		{ kdNonTerminal,  "Json", Grammar::JSON::symNTJson, false },
		{ kdNonTerminal,  "Members", Grammar::JSON::symNTMembers, false },
		{ kdNonTerminal,  "Object", Grammar::JSON::symNTObject, false },
		{ kdNonTerminal,  "Pair", Grammar::JSON::symNTPair, false },
		{ kdNonTerminal,  "Value", Grammar::JSON::symNTValue, false },

	}; // table





} // namespace Symbols
} // namespace JSON
} // namespace Private
} // namespace Grammar

#endif // __CPP_PARSER_SYMBOLS_HXX__
