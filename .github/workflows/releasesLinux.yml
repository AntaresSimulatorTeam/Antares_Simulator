name: Release asset upload (Linux)

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}
  
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2 
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.0
      
    - name: Install mandatory system libraries
      run: |
           sudo apt-get update --fix-missing
           sudo apt-get install libuuid1 uuid-dev libssh2-1 libssh2-1-dev libidn2-0 libidn2-dev libidn11 libidn11-dev gtk2.0 libb64-dev   
           sudo apt-get install libwxgtk3.0-dev libcurl4-openssl-dev libboost-test-dev
    
    - name: Download pre-compiled librairies
      run: |
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.0.0/rte-antares-deps-${{matrix.os}}-Release-OFF.tar.gz
           tar -xvf rte-antares-deps-${{matrix.os}}-Release-OFF.tar.gz
           rm -rf rte-antares-deps-${{matrix.os}}-Release-OFF.tar.gz

    - name: Configure
      run: |
           cmake -B _build -S src -DCMAKE_PREFIX_PATH=rte-antares-deps-Release -DCMAKE_BUILD_TYPE=release
           
    - name: Build
      run: |
           cmake --build _build --config release -j2    

    - name: Installer .deb creation
      run: |
           cd _build
           cpack -G DEB
           export DEB_NAME=$(ls *.deb)
           echo "DEB_NAME=$DEB_NAME" >> $GITHUB_ENV
           
    - name: Upload .deb
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.DEB_NAME}}
        asset_name: ${{env.DEB_NAME}}
        asset_content_type: application/octet-stream