name: Windows CI and release upload (VCPKG)

on:
  push:
    tag:      
      - v*
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        buildtype: [release]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: 'ee17a685087a6886e5681e355d36cd784f0dd2c8'
            vcpkgPackages: openssl curl wxwidgets boost-test

    steps:
    - uses: actions/checkout@v2 

    - name : Install deps with VCPKG
      uses: lukka/run-vcpkg@master
      id: runvcpkg
      with:
        vcpkgArguments: '${{ matrix.vcpkgPackages }}'
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          
    - name: Prints output of run-vcpkg's task
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
        
    - name: Configure
      run: |
           cmake -B _build -S src -DCMAKE_TOOLCHAIN_FILE=${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_BUILD_TYPE=release -DBUILD_TESTING=ON
    
    - name: Build
      run: |
           cmake --build _build --config release -j2


    - name: Running unit tests
      run: |
           cd _build
           ctest -C ${{ matrix.buildtype }} --output-on-failure
           
    - name: Installer creation
      run: |
           cd _build
           cpack -GNSIS

    - name: Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-installer-64bits
        path: _build/rte-antares-*.*.*-installer-*.exe
        
    - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
    - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: _build/rte-antares-*.*.*-installer-*.exe
          asset_name: rte-antares-installer-{ github.ref }.exe
          asset_content_type: application/exe
