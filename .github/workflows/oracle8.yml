name: Oracle 8 CI (push and/or release)

on:
  release:
    types: [created]
  push:
    branches:
      - develop
      - dependabot/*

  schedule:
    - cron: '21 2 * * *'
  workflow_call:
    inputs:
      run-tests:
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{ github.token }}
  IS_RELEASE: ${{ github.event_name == 'workflow_dispatch' }}
  IS_PUSH: ${{ github.event_name == 'push' }}
  REF: ${{ inputs.target_branch =='' && github.ref_name || inputs.target_branch}}

jobs:

  build:
    name: Build
    env:
      ORTOOLS_DIR: ${{ github.workspace }}/or-tools

    runs-on: ubuntu-latest
    container: 'oraclelinux:8'

    steps:

    - name: Set up Python
      run: |
           dnf update -y
           dnf install -y python3 python3-pip

    - name: Install libraries
      run: |
           dnf install -y epel-release git cmake wget rpm-build redhat-lsb-core
           dnf install -y unzip libuuid-devel boost-test boost-devel gcc-toolset-11 zlib-devel

    - name: Checkout
      run: |
        git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git -b ${{ env.REF }} .
        git config --global safe.directory '*'

    - name: Install VCPKG
      # Note: we need to use environment variables instead of workflow variables
      #       because github messes up path variables when running in container,
      #       see https://github.com/actions/runner/issues/2058
      run: |
        git submodule update --init vcpkg && ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
        echo "VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_DIR=$GITHUB_WORKSPACE/vcpkg_cache" >> $GITHUB_ENV
        echo "VCPKG_BINARY_SOURCES=clear;files,$GITHUB_WORKSPACE/vcpkg_cache,readwrite" >> $GITHUB_ENV

    - name: Restore vcpkg binary dir from cache
      id: cache-vcpkg-binary
      # Note: we are stuck with v3, because v4 is not compatible with oracle8 image
      uses: actions/cache/restore@v3
      with:
        path: ${{ env.VCPKG_CACHE_DIR }}
        key: vcpkg-cache-oracle8-${{ hashFiles('src/vcpkg.json', '.git/modules/vcpkg/HEAD') }}
        # Allows to restore a cache when deps have only partially changed (like adding a dependency)
        restore-keys: vcpkg-cache-oracle8-

    - name: Config OR-Tools URL
      run: |
          echo "ORTOOLS_URL=https://github.com/rte-france/or-tools/releases/download/$(cat ortools_tag)/ortools_cxx_oraclelinux-8_static_sirius.zip" >> $GITHUB_ENV

    - name: Download & extract OR-Tools
      run: |
           mkdir -p  ${{env.ORTOOLS_DIR}}
           cd ${{env.ORTOOLS_DIR}}
           wget ${{env.ORTOOLS_URL}} -O ortools.zip
           unzip ortools.zip
           rm ortools.zip

    - name: Init submodule
      run: git submodule update --init --remote src/antares-deps src/tests/resources/Antares_Simulator_Tests

    - name: Install dependencies
      run: |
          pip3 install -r src/tests/examples/requirements.txt

    - name: Install gh if needed
      if: ${{ env.IS_RELEASE == 'true' }}
      run: |
           dnf -y install 'dnf-command(config-manager)'
           dnf -y config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
           dnf -y install gh

    - name: Configure
      run: |
        source /opt/rh/gcc-toolset-11/enable
        cmake -B _build -S src \
          -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_TESTING=ON \
          -DBUILD_TOOLS=ON \
          -DBUILD_UI=OFF \
          -DCMAKE_PREFIX_PATH=${{ env.ORTOOLS_DIR }}/install

    - name: Build
      run: |
           source /opt/rh/gcc-toolset-11/enable
           cmake --build _build --config Release -j$(nproc)

    - name: Run unit and end-to-end tests
      if: ${{ env.IS_PUSH == 'true' }}
      run: |
        cd _build
        ctest -C Release --output-on-failure -L "unit|end-to-end"

    - name: Installer .rpm creation
      run: |
           cd _build
           cpack -G RPM

    - name: Solver archive creation
      run: |
           cd _build
           cmake --install . --prefix install
           pushd .
           cd install/bin
           tar czf ../../antares-solver_oracle8.tar.gz antares-solver libsirius_solver.so
           popd
           rm -rf install

    - name: .tar.gz creation
      run: |
           cd _build
           cpack -G TGZ

    - name: Installer TGZ push
      uses: actions/upload-artifact@v3
      with:
        path: _build/*.tar.gz

    - name: Installer RPM push
      uses: actions/upload-artifact@v3
      with:
        path: _build/*.rpm

    - name: Publish assets
      if: ${{ env.IS_RELEASE == 'true' }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
        tag: ${{ github.event.inputs.release_tag }}
      run: |
        gh release upload "$tag" _build/*.tar.gz _build/*.rpm

    - name: Cache vcpkg binary dir
      if: always()
      id: save-cache-vcpkg-binary
      uses: actions/cache/save@v3
      with:
        path: ${{ env.VCPKG_CACHE_DIR }}
        key: vcpkg-cache-oracle8-${{ hashFiles('src/vcpkg.json', '.git/modules/vcpkg/HEAD') }}
