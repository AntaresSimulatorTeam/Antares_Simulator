name: Windows CI (VCPKG)

on:
  push:
    branches:
      - develop
      - feature/*
      - features/*
      - fix/*
      - release/*
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [windows-latest]
        buildtype: [release]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgPackages: wxwidgets boost-test
    env:
      # Indicates the location of the vcpkg as a Git submodule of the project repository.
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
        
    # Restore both vcpkg and its artifacts from the GitHub cache service.
    - name: Restore vcpkg and its artifacts.
      uses: actions/cache@v2
      with:
        # The first path is the location of vcpkg (it contains the vcpkg executable and data files).
        # The other paths starting with '!' are exclusions: they contain termporary files generated during the build of the installed packages.
        path: |
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
        # The key is composed in a way that it gets properly invalidated: this must happen whenever vcpkg's Git commit id changes, or the list of packages changes. In this case a cache miss must happen and a new entry with a new key with be pushed to GitHub the cache service.
        # The key includes: hash of the vcpkg.json file, the hash of the vcpkg Git commit id, and the used vcpkg's triplet. The vcpkg's commit id would suffice, but computing an hash out it does not harm.
        # Note: given a key, the cache content is immutable. If a cache entry has been created improperly, in order the recreate the right content the key must be changed as well, and it must be brand new (i.e. not existing already).
        key: |
          ${{ hashFiles( 'vcpkg_manifest/vcpkg.json' ) }}-${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}-${{ matrix.triplet }}-invalidate
          
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip3 install -r src/tests/examples/requirements.txt
          
    - name : Install deps with VCPKG
      run: |
          git submodule update --init vcpkg
          cd vcpkg
          ./bootstrap-vcpkg.sh
          vcpkg install ${{matrix.vcpkgPackages}} --triplet ${{matrix.triplet}}
      shell: bash
        
    - name: Download pre-compiled librairies
      run: |
           choco install wget
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.0.1/rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip
           Expand-Archive ./rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip -DestinationPath .
           rm rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive src
           
    - name: Configure
      run: |
           cmake -B _build -S src -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DVCPKG_ROOT=${{env.VCPKG_ROOT}} -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_BUILD_TYPE=release -DBUILD_TESTING=ON  -DBUILD_OUTPUT_TEST=ON

    - name: Build
      run: |
           cmake --build _build --config release -j2

    - name: Running unit tests
      run: |
           cd _build
           ctest -C ${{ matrix.buildtype }} --output-on-failure -L "unit|end-to-end|short|medium" -LE ortools


    - name: Installer creation
      run: |
           Remove-Item .\src\tests\resources\Antares_Simulator_Tests\ -Recurse -Force
           cd _build
           cpack -GNSIS
           
    - name: .zip creation
      run: |
           cd _build
           cpack -G ZIP

    - name: Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-installer-64bits
        path: _build/rte-antares-*.*.*-installer-*.exe
        
    - name: Archive upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-windows-archive
        path: _build/*.zip
