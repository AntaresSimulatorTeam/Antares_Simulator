name: Windows CI (VCPKG)

on:
  push:
    branches:
      - develop
      - feature/*
      - features/*
      - fix/*
      - release/*
jobs:

  windows:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [windows-latest]
        buildtype: [release]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: 'c64c0fdac572ca43ea5ae018fc408ddced50d5b1'
            vcpkgPackages: openssl curl wxwidgets boost-test boost-process boost-filesystem boost-dll boost-regex

    steps:
    - uses: actions/checkout@v2 

    - name : Install deps with VCPKG
      uses: lukka/run-vcpkg@v4
      id: runvcpkg
      with:
        vcpkgArguments: '${{ matrix.vcpkgPackages }}'
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
        
    - name: Download pre-compiled librairies
      run: |
           choco install wget
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.0.1/rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip
           Expand-Archive ./rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip -DestinationPath .
           rm rte-antares-deps-${{matrix.os}}-x64-Release-solver.zip
           
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
          
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip3 install -r src/tests/examples/requirements.txt
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive src
        
    - name: Configure
      run: |
           cmake -B _build -S src -DDEPS_INSTALL_DIR=rte-antares-deps-Release -DVCPKG_ROOT=${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }} -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_BUILD_TYPE=release -DBUILD_TESTING=ON  -DBUILD_OUTPUT_TEST=ON

    - name: Build
      run: |
           cmake --build _build --config release -j2

    - name: Running unit tests
      run: |
           cd _build
           ctest -C ${{ matrix.buildtype }} --output-on-failure -L "unit|end-to-end|short|medium" -LE ortools


    - name: Installer creation
      run: |
           Remove-Item .\src\tests\resources\Antares_Simulator_Tests\ -Recurse -Force
           cd _build
           cpack -GNSIS
           
    - name: .zip creation
      run: |
           cd _build
           cpack -G ZIP

    - name: Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-installer-64bits
        path: _build/rte-antares-*.*.*-installer-*.exe
        
    - name: Archive upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-windows-archive
        path: _build/*.zip
