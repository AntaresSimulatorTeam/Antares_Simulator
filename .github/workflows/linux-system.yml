name: Linux CI (system libs)

on:
  push:
    branches:
      - develop
      - feature/*
      - features/*
      - fix/*
jobs:

  setup:

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2
    - name: Install libraries
      run: |
           sudo apt-get update --fix-missing
           sudo apt-get install uuid-dev libcurl4-openssl-dev libssl-dev libwxgtk3.0-gtk3-dev
           sudo apt-get install libboost-test-dev libboost-filesystem-dev libboost-regex-dev libboost-dev
           
    - name: Download pre-compiled librairies
      run: |
           wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v1.0.0/rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           tar -xvf rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           rm -rf rte-antares-deps-${{matrix.os}}-Release-solver.tar.gz
           
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
          
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip3 install -r src/tests/examples/requirements.txt
           

           
  build:
    
    needs: setup
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]
    
    steps:
    - uses: actions/checkout@v2 
      
    - name: Init submodule
      run: |
           git submodule update --init --recursive src
           
    - name: Configure
      run: |
           cmake -B _build -S src -DDEPS_INSTALL_DIR=./rte-antares-deps-Release -DCMAKE_BUILD_TYPE=release -DBUILD_TESTING=ON
           
    - name: Build
      run: |           
           cmake --build _build --config release -j2
  test:
    
    needs: build
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]
    
    steps:
    - name: Run unit tests
      run: |
           cd _build
           ctest -C Release --output-on-failure -L "unit|end-to-end|short|medium" -LE ortools
           
  installer:
    
    needs: build
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [ubuntu-20.04]
    
    steps:

    - name: Installer .deb creation
      run: |
           cd _build
           cpack -G DEB
           
    - name: Installer .tar.gz creation
      run: |
           cd _build
           cpack -G TGZ
           
    - name: Installer upload
      uses: actions/upload-artifact@v2
      with:
        name: antares-installer-64bits
        path: _build/antares-*.*.*-*-*.*.*

