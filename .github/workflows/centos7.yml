name: Centos7 CI (push and/or release)

on:
  release:
    types: [created]
  push:
    branches:
      - develop
      - feature/*
      - features/*
      - fix/*
      - release/*
      - doc/*

env:
  GITHUB_TOKEN: ${{ github.token }}
  IS_RELEASE: ${{ github.event_name == 'release' && github.event.action == 'created' }}
  IS_PUSH: ${{ github.event_name == 'push' }}

jobs:

  doc_generation:
    uses: ./.github/workflows/build-userguide.yml
    with:
      artifact_name: pdf-doc

  build:
    name: Build (XPRESS + OR-Tools=${{ matrix.ortools-xpress }})
    env:
      XPRESSDIR: ${{ github.workspace }}/xpressmp813
      ORTOOLSDIR: ${{ github.workspace }}/or-tools

    outputs:
        is_release: ${{steps.release_flag.outputs.is_release}}

    runs-on: ubuntu-latest
    needs:
      - doc_generation
    container: 'antaresrte/rte-antares:centos7-simulator-no-deps'
    strategy:
      matrix:
        ortools-xpress: [ON, OFF]

    steps:
    - name: Download & extract precompiled antares-deps
      run: |
        cd /
        wget https://github.com/AntaresSimulatorTeam/antares-deps/releases/download/v2.0.2/rte-antares-deps-centos7-Release.tar.gz
        tar xvf rte-antares-deps-centos7-Release.tar.gz
        rm rte-antares-deps-centos7-Release.tar.gz

    - uses: nelonoel/branch-name@v1.0.1

    - name: Checkout
      run: |
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git -b ${BRANCH_NAME} .

    - name: Export release flag
      id: release_flag
      run: |
        echo "::set-output name=is_release::${{env.IS_RELEASE}}"

    - name: Init submodule
      run: |
          git submodule update --init --recursive src/antares-deps src/tests/resources/Antares_Simulator_Tests

    - name: Download XPRESS if needed
      if: ${{ matrix.ortools-xpress == 'ON' }}
      run: |
        source /opt/rh/rh-git227/enable
        git clone -b master https://${{ secrets.XPRS_USERNAME }}:${{ secrets.XPRS_TOKEN }}@github.com/rte-france/xpress-mp ${{ env.XPRESSDIR }}

    - name: Config OR-Tools URL
      run: |
          if [ "${{ matrix.ortools-xpress }}" == "ON" ]; then
            echo "URL_ORTOOLS=https://github.com/rte-france/or-tools/releases/download/v9.2-rte1.3/ortools_cxx_centos7_static_sirius_xprs.zip " >> $GITHUB_ENV
            echo "LABEL=-ortools-xpress" >> $GITHUB_ENV
          else
            echo "URL_ORTOOLS=https://github.com/rte-france/or-tools/releases/download/v9.2-rte1.3/ortools_cxx_centos7_static_sirius.zip " >> $GITHUB_ENV
            echo "LABEL=" >> $GITHUB_ENV
          fi

    - name: Download OR-Tools
      id: ortools
      run: |
            mkdir -p ${{ env.ORTOOLSDIR }} && cd ${{ env.ORTOOLSDIR }}
            wget -q -O ortools.zip ${{ env.URL_ORTOOLS }}
            unzip -q ortools.zip
            rm ortools.zip

    - name: Download userguide
      uses: actions/download-artifact@v2
      with:
        name: pdf-doc
        path: docs/ref_guides

    - name: Configure
      run: |
           source /opt/rh/devtoolset-9/enable
           cmake3 -B _build -S src \
           -DCMAKE_C_COMPILER_LAUNCHER=ccache \
           -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
           -DDEPS_INSTALL_DIR=/rte-antares-deps-Release \
           -DCMAKE_BUILD_TYPE=release \
           -DBUILD_TESTING=ON \
           -DBUILD_not_system=OFF \
           -DCMAKE_PREFIX_PATH=${{ env.ORTOOLSDIR }}/install \
           -DXPRESS_ROOT=${{ env.XPRESSDIR }}

    - name: Build
      run: |
           source /opt/rh/devtoolset-9/enable
           source /opt/rh/rh-git227/enable
           cmake3 --build _build --config Release -j2
           ccache -s

    - name: Installer .rpm creation
      run: |
           cd _build
           cpack3 -G RPM

    - name: Rename .rpm file
      run: |
           cd _build
           RPM_NAME=$(ls *.rpm)
           RPM_NAME_WITH_SUFFIX=${RPM_NAME/.rpm/${{ env.LABEL }}.rpm}
           mv "${RPM_NAME}" "${RPM_NAME_WITH_SUFFIX}" || true

    - name: .tar.gz creation
      run: |
           cd _build
           cpack3 -G TGZ
    
    - name: Rename .tgz file
      run: |
           cd _build
           TGZ_NAME=$(ls *.tar.gz)
           TGZ_NAME_WITH_SUFFIX=${TGZ_NAME/.tar.gz/${{ env.LABEL }}.tar.gz}
           mv "${TGZ_NAME}" "${TGZ_NAME_WITH_SUFFIX}" || true

    - name: Installer TGZ push
      uses: actions/upload-artifact@v2
      with:
        path: _build/*.tar.gz

    - name: Installer RPM push
      uses: actions/upload-artifact@v2
      with:
        path: _build/*.rpm

  publish_assets:
    name: Publish assets
    needs: build
    runs-on: ubuntu-latest
    if: ${{needs.build.outputs.is_release == 'true'}}
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: List artifacts
      run: ls -R

    - name: Publish assets
      uses: alexellis/upload-assets@0.3.0
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          asset_paths: '["*/*.tar.gz", "*/*.rpm"]'
