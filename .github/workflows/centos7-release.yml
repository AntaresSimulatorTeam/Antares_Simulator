name: Centos7 CI (Release)

on:
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ github.token }}
  
jobs:

  docker_publish:
  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master 

    - name: Read antares-deps version
      id: antares-deps-version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: 'antares-deps-version.json'
        prop_path: 'antares_deps_version'
    
    - name: Get branch name
      id: branch_name
      uses: tj-actions/branch-names@v5
      
    - name: Docker file push
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        ANTARES_DEPS_VERSION: ${{steps.antares-deps-version.outputs.prop}}
      with:
        name: antaresrte/rte-antares
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: docker
        dockerfile: centos7-basic-requirements
        cache: true
        tags: centos7-simulator
        buildargs: ANTARES_DEPS_VERSION

  build:

    runs-on: ubuntu-latest
    needs: docker_publish
    container: 'antaresrte/rte-antares:centos7-simulator'

    steps:
           
    - uses: nelonoel/branch-name@v1.0.1
    
    - name: Checkout
      run: |
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git -b ${BRANCH_NAME} .
    
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.0
           
    - name: Init submodule
      run: |
           git submodule update --init --recursive src
           
    - name: Configure
      run: |
           source /opt/rh/devtoolset-9/enable
           source /opt/rh/rh-git227/enable
           cmake3 -B _build -S src -DDEPS_INSTALL_DIR=/rte-antares-deps-Release -DCMAKE_BUILD_TYPE=release -DBUILD_TESTING=ON
    
    - name: Build
      run: |
           source /opt/rh/devtoolset-9/enable
           source /opt/rh/rh-git227/enable
           cmake3 --build _build --config release -j2
    
    - name: Installer .rpm creation
      run: |
           cd _build
           cpack3 -G RPM
           export RPM_NAME=$(ls *.rpm)
           echo "RPM_NAME=$RPM_NAME" >> $GITHUB_ENV
           
    - name: .tar.gz creation
      run: |
           cd _build
           cpack3 -G TGZ
           export TGZ_NAME=$(ls *.tar.gz)
           echo "TGZ_NAME=$TGZ_NAME" >> $GITHUB_ENV
           
    - name: Upload .rpm
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.RPM_NAME}}
        asset_name: ${{env.RPM_NAME}}
        asset_content_type: application/octet-stream
           
    - name: Upload .tar.gz
      uses: actions/upload-release-asset@v1.0.2
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: _build/${{env.TGZ_NAME}}
        asset_name: ${{env.TGZ_NAME}}
        asset_content_type: application/octet-stream
    
